// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Bank = (function(superClass) {
    extend(Bank, superClass);

    function Bank() {
      return Bank.__super__.constructor.apply(this, arguments);
    }

    Bank.prototype.initialize = function() {
      this.set('playerWallet', 1005);
      return this.set('currentBet', 0);
    };

    Bank.prototype.startBetting = function() {
      this.set('currentBet', 0);
      return this.addBet(5);
    };

    Bank.prototype.addBet = function(amount) {
      this.set('playerWallet', this.get('playerWallet') - amount);
      return this.set('currentBet', this.get('currentBet') + amount);
    };

    Bank.prototype.closeBets = function() {
      return this.trigger('betsPlaced');
    };

    Bank.prototype.payout = function(t) {
      var c, d, m1, m2, win;
      if (t === "win") {
        c = 2;
        m1 = 'You won $';
        m2 = '!';
        d = 1 * this.get('currentBet');
      }
      if (t === "push") {
        c = 1;
        m1 = 'Push! You get $';
        m2 = 'back!';
        d = c * this.get('currentBet');
      }
      if (t === "blackjack") {
        c = 3;
        m1 = 'You hit the blackjack! \nHere\'s $';
        m2 = '!';
        d = c * this.get('currentBet');
      }
      win = c * this.get('currentBet');
      $('#message').css({
        'opacity': 1
      });
      $('#message').text(m1 + d + m2);
      return this.set('playerWallet', (this.get('playerWallet')) + win);
    };

    return Bank;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=Bank.js.map
